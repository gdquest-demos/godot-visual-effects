[gd_scene load_steps=20 format=3 uid="uid://bh3lfly2ei6vb"]

[ext_resource type="Texture2D" uid="uid://2gokaekfh5q2" path="res://assets/staff.svg" id="1"]
[ext_resource type="Environment" uid="uid://c8ol6uwdees61" path="res://assets/2d_environment.tres" id="2"]
[ext_resource type="Texture2D" uid="uid://ck4bdea7gygiy" path="res://assets/sparkle.png" id="3"]
[ext_resource type="Script" path="res://fire_ball/fire_ball_spawner.gd" id="4"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Node2D

@onready var anim_player := $AnimationPlayer
@onready var spawner := $Sprite2D/CoreSparkles/FireBallSpawner

var is_casting := false: set = set_is_casting


func _process(delta: float) -> void:
	global_position.y = lerp(global_position.y, get_global_mouse_position().y, 5.0 * delta)


func _unhandled_input(event: InputEvent) -> void:
	if event.is_action_pressed(\"fire_weapon\") and not is_casting:
		self.is_casting = true

	elif event.is_action_released(\"fire_weapon\"):
		if anim_player.assigned_animation == \"Cast\" and not anim_player.is_playing():
			spawner.throw()
		self.is_casting = false


func set_is_casting(value: bool) -> void:
	is_casting = value
	if not anim_player:
		await self.ready

	if is_casting:
		anim_player.play(\"Cast\")
	else:
		anim_player.play(\"Rest\")
"

[sub_resource type="Gradient" id="2"]
offsets = PackedFloat32Array(0, 0.130909, 0.345455, 0.607273, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 0.648972, 0.164062, 1, 1, 0.475624, 0.136719, 1, 0.888672, 0.17704, 0.17704, 1, 0.203922, 0.203922, 0.203922, 1)

[sub_resource type="GradientTexture2D" id="3"]
gradient = SubResource("2")

[sub_resource type="Curve" id="4"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.483222, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="5"]
curve = SubResource("4")

[sub_resource type="ParticleProcessMaterial" id="6"]
lifetime_randomness = 0.6
emission_shape = 1
emission_sphere_radius = 75.0
direction = Vector3(-1, 0, 0)
spread = 180.0
radial_velocity_min = -100.0
radial_velocity_max = -100.0
gravity = Vector3(0, 0, 0)
scale_min = 0.1
scale_max = 0.3
scale_curve = SubResource("5")
color_ramp = SubResource("3")

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_8vo2r"]
bg_color = Color(0.294118, 0.196078, 0.329412, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_m7pxb"]
bg_color = Color(0.921569, 0.337255, 0.294118, 1)

[sub_resource type="Animation" id="9"]
length = 1.4
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.25),
"transitions": PackedFloat32Array(0.5, 1, 1),
"update": 0,
"values": [-89.9999, -55.0, -60.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Sprite2D/CoreSparkles:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.25, 1.4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("ProgressBar:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("ProgressBar:value")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.25, 1.4),
"transitions": PackedFloat32Array(1, 2, 1),
"update": 0,
"values": [0.0, 0.0, 100.0]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Sprite2D/CoreSparkles:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.4, 1.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1.1, 1.1, 1.1, 1), Color(1.3, 1.3, 1.3, 1)]
}
tracks/5/type = "method"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Sprite2D/CoreSparkles/FireBallSpawner")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(1.4),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"spawn"
}]
}

[sub_resource type="Animation" id="10"]
resource_name = "Rest"
length = 0.35
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.15, 0.35),
"transitions": PackedFloat32Array(1, 1, 0.5),
"update": 0,
"values": [-60.0, -95.0, -89.9999]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("ProgressBar:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Sprite2D/CoreSparkles:emitting")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_swi6v"]
_data = {
"Cast": SubResource("9"),
"Rest": SubResource("10")
}

[sub_resource type="GDScript" id="11"]
script/source = "extends Marker2D


@export var asteroid_scene: PackedScene = preload(\"res://FireBall/FlyingAsteroid.tscn\")


func spawn() -> void:
	var asteroid := asteroid_scene.instantiate()
	
	add_child(asteroid)
	asteroid.set_as_top_level(true)
	asteroid.global_position = global_position
"

[sub_resource type="GDScript" id="12"]
script/source = "extends Timer

@export var min_wait_time := 0.5
@export var max_wait_time := 2.0


func _ready() -> void:
	randomize()
	randomize_wait_time()
	if autostart:
		start()


func randomize_wait_time():
	wait_time = randf_range(min_wait_time, max_wait_time)


func _on_timeout() -> void:
	randomize_wait_time()
	if not one_shot:
		start()
"

[sub_resource type="Animation" id="13"]
resource_name = "Idle"
length = 4.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1920, 0), Vector2(1920, 1080)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5glyw"]
_data = {
"Idle": SubResource("13")
}

[node name="FireBallDemo" type="Node2D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("2")

[node name="FireStaff" type="Node2D" parent="."]
position = Vector2(88, 336)
script = SubResource("1")

[node name="Sprite2D" type="Sprite2D" parent="FireStaff"]
position = Vector2(0, 144)
rotation = -1.57079
texture = ExtResource("1")
offset = Vector2(104, 0)

[node name="CoreSparkles" type="GPUParticles2D" parent="FireStaff/Sprite2D"]
self_modulate = Color(1.11, 1.11, 1.11, 1)
position = Vector2(160, -0.000358582)
rotation = 1.57079
amount = 32
process_material = SubResource("6")
texture = ExtResource("3")
randomness = 1.0

[node name="FireBallSpawner" type="Marker2D" parent="FireStaff/Sprite2D/CoreSparkles"]
position = Vector2(-0.000648499, -2)
script = ExtResource("4")

[node name="ProgressBar" type="ProgressBar" parent="FireStaff"]
offset_left = -66.491
offset_top = 176.0
offset_right = 105.509
offset_bottom = 190.0
theme_override_styles/background = SubResource("StyleBoxFlat_8vo2r")
theme_override_styles/fill = SubResource("StyleBoxFlat_m7pxb")
show_percentage = false

[node name="AnimationPlayer" type="AnimationPlayer" parent="FireStaff"]
libraries = {
"": SubResource("AnimationLibrary_swi6v")
}

[node name="AsteroidSpawner" type="Marker2D" parent="."]
position = Vector2(1920, 0)
script = SubResource("11")

[node name="RandomTimer" type="Timer" parent="AsteroidSpawner"]
autostart = true
script = SubResource("12")
min_wait_time = 2.0
max_wait_time = 4.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="AsteroidSpawner"]
libraries = {
"": SubResource("AnimationLibrary_5glyw")
}
autoplay = "Idle"

[connection signal="timeout" from="AsteroidSpawner/RandomTimer" to="AsteroidSpawner" method="spawn"]
[connection signal="timeout" from="AsteroidSpawner/RandomTimer" to="AsteroidSpawner/RandomTimer" method="_on_timeout"]
