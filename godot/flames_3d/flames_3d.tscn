[gd_scene load_steps=12 format=3 uid="uid://dgnr5gfewfpm4"]

[ext_resource type="Texture2D" uid="uid://bhqerfuli7kpc" path="res://flames_3d/fire_shape.png" id="1"]
[ext_resource type="Texture2D" uid="uid://m2f0rap4vq5m" path="res://flames_3d/fire_grain.png" id="2"]
[ext_resource type="Texture2D" uid="uid://blo40p8grtvg4" path="res://flames_3d/fire_pattern.png" id="3"]

[sub_resource type="Shader" id="1"]
code = "shader_type spatial;
render_mode blend_add, depth_draw_opaque, unshaded;

uniform vec4 albedo : source_color;
uniform sampler2D texture_fire_shape : source_color;
uniform sampler2D texture_fire_pattern : source_color;
uniform sampler2D texture_fire_grain : source_color;

varying float particle_time;

void vertex() {
	mat4 mat_world = mat4(normalize(INV_VIEW_MATRIX[0])*length(MODEL_MATRIX[0]),normalize(INV_VIEW_MATRIX[1])*length(MODEL_MATRIX[0]),normalize(INV_VIEW_MATRIX[2])*length(MODEL_MATRIX[2]),MODEL_MATRIX[3]);
	mat_world = mat_world * mat4( vec4(cos(INSTANCE_CUSTOM.x),-sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0),vec4(0.0, 0.0, 1.0, 0.0),vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = VIEW_MATRIX * mat_world;
	particle_time = INSTANCE_CUSTOM.z;
}

void fragment() {
	vec2 fire_pattern_uv_offset = vec2(
		sin(particle_time * TAU) * 0.2,
		particle_time
	);
	vec2 fire_grain1_uv_offset = vec2(
		sin(particle_time * TAU) * .7, 
		particle_time * 1.6
	);
	vec2 fire_grain2_uv_offset = vec2(
		sin(particle_time * TAU + 0.5) * 0.2 + 0.5, 
		particle_time * 2.0 + 0.5
	);
	
	vec4 fire_shape = texture(texture_fire_shape, UV);
	vec4 fire_pattern = texture(texture_fire_pattern, UV * vec2(0.5, 0.25) + fire_pattern_uv_offset);
	vec4 fire_grain1 = texture(texture_fire_grain, UV * vec2(0.5) + fire_grain1_uv_offset);
	vec4 fire_grain2 = texture(texture_fire_grain, UV * vec2(0.25) + fire_grain2_uv_offset);
	vec4 albedo_tex =  fire_shape * fire_pattern * 2.0 * fire_grain1 * 2.0 * fire_grain2 * 2.0;
	albedo_tex = albedo_tex;
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA = albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id="2"]
render_priority = 0
shader = SubResource("1")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_fire_shape = ExtResource("1")
shader_parameter/texture_fire_pattern = ExtResource("3")
shader_parameter/texture_fire_grain = ExtResource("2")

[sub_resource type="Gradient" id="3"]
offsets = PackedFloat32Array(0, 0.245327, 0.714953, 1)
colors = PackedColorArray(0.110145, 0.110145, 0.110145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="4"]
gradient = SubResource("3")

[sub_resource type="Curve" id="5"]
_data = [Vector2(0, 0.791667), 0.0, 1.40052, 0, 0, Vector2(1, 0.206871), -1.31274, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="6"]
curve = SubResource("5")

[sub_resource type="ParticleProcessMaterial" id="7"]
lifetime_randomness = 0.5
emission_shape = 3
emission_box_extents = Vector3(3, 0.1, 0.1)
direction = Vector3(0, 1, 0)
spread = 13.89
initial_velocity_min = 0.5
initial_velocity_max = 0.5
gravity = Vector3(0, 0, 0)
scale_min = 0.5
scale_max = 2.0
scale_curve = SubResource("6")
color_ramp = SubResource("4")
anim_speed_min = 0.2
anim_speed_max = 0.2
anim_offset_max = 1.0

[sub_resource type="QuadMesh" id="8"]

[node name="Flames3D" type="GPUParticles3D"]
material_override = SubResource("2")
amount = 50
lifetime = 1.5
draw_order = 2
process_material = SubResource("7")
draw_pass_1 = SubResource("8")
